#Haemi Lee
#Version 2
#Fall 2018
#hold the Lsystem class and a test function for it.

import sys

class Lsystem:
    def __init__(self, filename=None):
        '''create two fields: base and rules'''
        self.base = ''
        self.rules = []
        if filename != None:
            self.read(filename)
    
    def setBase(self, newbase):
        '''sets the base of the lsystem to newbase. Newbase is a string'''
        self.base = newbase
    
    def getBase(self):
        '''return the base field of self'''
        return self.base
    
    def getRule(self, index):
        '''returns the specified single rule from the rules field of self'''
        return self.rules[index]

    def addRule(self, newrule):
        '''adds a rule to the rules list. newrule is a list with two strings.'''
        self.rules.append(newrule)

    def numRules(self):
        '''returns the number of rules in the rules list'''
        return len(self.rules)

    def read( self, filename ):
        '''opens the file, reads in the Lsystem information, 
        resets the base and rules fields of self, and then store the 
        information from the file in the appropriate fields'''
        fp = open(filename, 'r')
        for lines in fp:
            words = lines.split()
            if words[0] == 'base':
                self.setBase(words[1])
            elif words[0] == 'rule':
                self.addRule(words[1:])
        fp.close()
    
    def replace(self, istring):
        '''handles multiple rules'''
        tstring = ''
        for c in istring:
            found = False
            for rule in self.rules:
                    if rule[0] == c:
                        tstring = tstring + rule[1]
                        found = True
                        break
            if found == False:
                tstring = tstring + c
        return tstring

    def buildString(self, iterations):
        '''Return a string generated by applying the L-system rules
    for n iterations'''
        nstring = self.base
        for i in range(iterations):
            nstring = self.replace(nstring)
        return nstring

def main(argv):

    if len(argv) < 2:
      print('Usage: lsystem.py <filename>')
      exit()

    filename = argv[1]
    iterations = 2

    lsys = Lsystem()

    lsys.read( filename )

    print( lsys )
    print( lsys.getBase() )
    for i in range( lsys.numRules() ):
      rule = lsys.getRule(i)
      print( rule[0] + ' -> ' + rule[1] )

    lstr = lsys.buildString( iterations )
    print( lstr )

    return


if __name__=='__main__':
    main(sys.argv)

